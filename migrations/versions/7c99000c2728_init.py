"""Init

Revision ID: 7c99000c2728
Revises: 
Create Date: 2024-06-27 20:20:33.730958

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7c99000c2728'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('groups_backup')
    op.add_column('grades', sa.Column('grade_data', sa.Date(), nullable=True))
    op.alter_column('grades', 'student_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('grades', 'subject_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('grades_student_id_fkey', 'grades', type_='foreignkey')
    op.drop_constraint('grades_subject_id_fkey', 'grades', type_='foreignkey')
    op.create_foreign_key(None, 'grades', 'subjects', ['subject_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'grades', 'students', ['student_id'], ['id'], ondelete='CASCADE')
    op.drop_column('grades', 'grade_date')
    op.alter_column('students', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
    op.alter_column('students', 'group_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('students_group_id_fkey', 'students', type_='foreignkey')
    op.create_foreign_key(None, 'students', 'groups', ['group_id'], ['id'], ondelete='CASCADE')
    op.alter_column('subjects', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
    op.alter_column('subjects', 'teacher_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('subjects_teacher_id_fkey', 'subjects', type_='foreignkey')
    op.create_foreign_key(None, 'subjects', 'teachers', ['teacher_id'], ['id'], ondelete='CASCADE')
    op.alter_column('teachers', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
    # ### end Alembic commands ###





def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('teachers', 'name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_constraint(None, 'subjects', type_='foreignkey')
    op.create_foreign_key('subjects_teacher_id_fkey', 'subjects', 'teachers', ['teacher_id'], ['id'])
    op.alter_column('subjects', 'teacher_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('subjects', 'name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_foreign_key('students_group_id_fkey', 'students', 'groups_backup', ['group_id'], ['id'])
    op.alter_column('students', 'group_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('students', 'name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.add_column('grades', sa.Column('grade_date', sa.DATE(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.create_foreign_key('grades_subject_id_fkey', 'grades', 'subjects', ['subject_id'], ['id'])
    op.create_foreign_key('grades_student_id_fkey', 'grades', 'students', ['student_id'], ['id'])
    op.alter_column('grades', 'subject_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('grades', 'student_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('grades', 'grade_data')
    op.create_table('groups_backup',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='groups_pkey')
    )
    op.drop_table('groups')
    # ### end Alembic commands ###


